/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frames;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gutyc
 */
public class CorreosAEnviar extends javax.swing.JFrame {

    ArrayList<String> destinatarios;
    private appCorreo mainFrame;

    /**
     * Creates new form CorreosAEnviar
     */
    public CorreosAEnviar(appCorreo parent) {
        initComponents();

        this.mainFrame = parent;

        tablaCorreos.getColumnModel().getColumn(0).setMaxWidth(100);

        destinatarios = new ArrayList<>(appCorreo.getDestinatarios());
        spinerCorreos.setValue(destinatarios.size());

        DefaultTableModel modelo = (DefaultTableModel) tablaCorreos.getModel();

        modelo.setRowCount(destinatarios.size());
        for (int i = 0; i < destinatarios.size(); i++) {
            modelo.setValueAt(i + 1, i, 0);
            modelo.setValueAt(destinatarios.get(i), i, 1);
        }

    }

    public CorreosAEnviar() {
        initComponents();

        tablaCorreos.getColumnModel().getColumn(0).setMaxWidth(100);

        destinatarios = new ArrayList<>(appCorreo.getDestinatarios());
        spinerCorreos.setValue(destinatarios.size());

        DefaultTableModel modelo = (DefaultTableModel) tablaCorreos.getModel();

        modelo.setRowCount(destinatarios.size());
        for (int i = 0; i < destinatarios.size(); i++) {
            modelo.setValueAt(i + 1, i, 0);
            modelo.setValueAt(destinatarios.get(i), i, 1);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        botonListoCorreos = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCorreos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        spinerCorreos = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        CorreoAEliminar = new javax.swing.JTextField();
        botonEliminarCorreo = new javax.swing.JButton();
        btnCC = new javax.swing.JRadioButton();
        btnCCO = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        botonListoCorreos.setFont(new java.awt.Font("Gill Sans MT", 0, 24)); // NOI18N
        botonListoCorreos.setText("LISTO");
        botonListoCorreos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonListoCorreosActionPerformed(evt);
            }
        });

        tablaCorreos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "No. Correo", "Correo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaCorreos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tablaCorreosFocusLost(evt);
            }
        });
        tablaCorreos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaCorreosKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tablaCorreos);

        jLabel1.setFont(new java.awt.Font("Gill Sans MT", 0, 24)); // NOI18N
        jLabel1.setText("Correos destinatarios:");

        jLabel2.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        jLabel2.setText("Eliminar correo no.");

        spinerCorreos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinerCorreosStateChanged(evt);
            }
        });
        spinerCorreos.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                spinerCorreosPropertyChange(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        jLabel3.setText("NÃºmero de correos:");

        CorreoAEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CorreoAEliminarActionPerformed(evt);
            }
        });

        botonEliminarCorreo.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        botonEliminarCorreo.setText("ELIMINAR");
        botonEliminarCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarCorreoActionPerformed(evt);
            }
        });

        buttonGroup1.add(btnCC);
        btnCC.setText("CC");
        btnCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCCActionPerformed(evt);
            }
        });

        buttonGroup1.add(btnCCO);
        btnCCO.setText("CCO");
        btnCCO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCCOActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(115, 115, 115))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(spinerCorreos, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(106, 106, 106))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CorreoAEliminar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(botonEliminarCorreo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(botonListoCorreos, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCC, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnCCO, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinerCorreos, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CorreoAEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(botonListoCorreos, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonEliminarCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCC)
                    .addComponent(btnCCO))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonListoCorreosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonListoCorreosActionPerformed
        // Actualizar la lista de destinatarios leyendo la tabla,
        // para asegurarnos de recoger todos los correos ingresados en la columna "correo"
        DefaultTableModel modelo = (DefaultTableModel) tablaCorreos.getModel();
        destinatarios.clear();

        for (int i = 0; i < modelo.getRowCount(); i++) {
            Object correoObj = modelo.getValueAt(i, 1);  // Suponiendo que la columna 1 es "correo"
            if (correoObj != null) {
                String correo = correoObj.toString().trim();
                if (!correo.isEmpty()) {
                    destinatarios.add(correo);
                }
            }
        }

        // Si hay 2 o mÃ¡s correos se debe haber seleccionado CC o CCO
        if (destinatarios.size() >= 2 && (!btnCC.isSelected() && !btnCCO.isSelected())) {
            JOptionPane.showMessageDialog(this,
                    "Para 2 o mÃ¡s correos, debes seleccionar CC o CCO.",
                    "Advertencia",
                    JOptionPane.WARNING_MESSAGE);
            return; // Se detiene la ejecuciÃ³n hasta que se cumpla la condiciÃ³n
        }

        // Si se seleccionÃ³ CCO, mostrar la advertencia adicional
        if (btnCCO.isSelected()) {
            int confirm = JOptionPane.showConfirmDialog(
                    this,
                    "ADVERTENCIA, EL PRIMER DESTINATARIO SERA VISIBLE PARA TODOS LOS DEMAS",
                    "Advertencia",
                    JOptionPane.OK_CANCEL_OPTION,
                    JOptionPane.WARNING_MESSAGE
            );
            if (confirm != JOptionPane.OK_OPTION) {
                return;
            }
        }

        // Construir el string de correos separados por comas
        String correosConcatenados = String.join(", ", destinatarios);

        // Obtener el prefijo del tipo de copia en funciÃ³n del radio button seleccionado
        String copyPrefix = "";
        if (btnCC.isSelected()) {
            copyPrefix = "CC: ";
        } else if (btnCCO.isSelected()) {
            copyPrefix = "CCO: ";
        }

        // Concatenar y actualizar el textDestinatarios en el frame principal
        mainFrame.setlabdes(copyPrefix + correosConcatenados);

        // Actualizar la lista en appCorreo
        appCorreo.setDestinatarios(destinatarios);
        this.dispose();
    }//GEN-LAST:event_botonListoCorreosActionPerformed

    private void botonEliminarCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarCorreoActionPerformed
        try {
            int numAEliminar = Integer.parseInt(CorreoAEliminar.getText()) - 1;
            destinatarios.remove(numAEliminar);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Por favor, introduce un nÃºmero de correo");
        }
        actualizarTabla();
    }//GEN-LAST:event_botonEliminarCorreoActionPerformed

    private void spinerCorreosPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_spinerCorreosPropertyChange

    }//GEN-LAST:event_spinerCorreosPropertyChange

    private void spinerCorreosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinerCorreosStateChanged
        DefaultTableModel modelo = (DefaultTableModel) tablaCorreos.getModel();

        int numCorreos = Integer.parseInt(spinerCorreos.getValue().toString());
        modelo.setRowCount(numCorreos);

        for (int i = 0; i < numCorreos; i++) {
            modelo.setValueAt(i + 1, i, 0);
        }

        updateCopiaButtons();
    }//GEN-LAST:event_spinerCorreosStateChanged

    private void CorreoAEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CorreoAEliminarActionPerformed

    }//GEN-LAST:event_CorreoAEliminarActionPerformed

    private void tablaCorreosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tablaCorreosFocusLost

    }//GEN-LAST:event_tablaCorreosFocusLost

    private void tablaCorreosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaCorreosKeyPressed
        DefaultTableModel modelo = (DefaultTableModel) tablaCorreos.getModel();

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            destinatarios.clear();

            for (int i = 0; i < modelo.getRowCount(); i++) {
                if (modelo.getValueAt(i, 1) != null && !modelo.getValueAt(i, 1).toString().equals("")) {
                    destinatarios.add(modelo.getValueAt(i, 1).toString());
                }
            }
        }
    }//GEN-LAST:event_tablaCorreosKeyPressed

    private void btnCCOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCCOActionPerformed
        mainFrame.setEstadoCopia("CCO");
    }//GEN-LAST:event_btnCCOActionPerformed

    private void btnCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCCActionPerformed
        mainFrame.setEstadoCopia("CC");
    }//GEN-LAST:event_btnCCActionPerformed

    public void actualizarTabla() {
        DefaultTableModel modelo = (DefaultTableModel) tablaCorreos.getModel();
        int numCorreos = Integer.parseInt(spinerCorreos.getValue().toString());

        for (int i = 0; i < numCorreos; i++) {
            modelo.setValueAt(i + 1, i, 0);

            if (i < destinatarios.size()) {
                modelo.setValueAt(destinatarios.get(i), i, 1);
            } else {
                modelo.setValueAt("", i, 1);
            }
        }
    }

    private void updateCopiaButtons() {
        int numCorreos = Integer.parseInt(spinerCorreos.getValue().toString());
        // Habilita los botones solo cuando el spinner tenga 2 o mÃ¡s
        if (numCorreos >= 2) {
            btnCC.setEnabled(true);
            btnCCO.setEnabled(true);
        } else {
            btnCC.setEnabled(false);
            btnCCO.setEnabled(false);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CorreosAEnviar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CorreosAEnviar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CorreosAEnviar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CorreosAEnviar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CorreosAEnviar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CorreoAEliminar;
    private javax.swing.JButton botonEliminarCorreo;
    private javax.swing.JButton botonListoCorreos;
    private javax.swing.JRadioButton btnCC;
    private javax.swing.JRadioButton btnCCO;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner spinerCorreos;
    private javax.swing.JTable tablaCorreos;
    // End of variables declaration//GEN-END:variables
}
